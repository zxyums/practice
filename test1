const filteringOption = useMemo(() => {
    if (!inputValue || inputValue === selectedValue) {
        return options;
    }

    // Check if inputValue is numeric
    const numericInput = Number(inputValue);
    const isNumericInput = !isNaN(numericInput);

    return options?.filter((option) => {
        // Normalize value and key for comparison
        const value = option?.value?.toString();
        const key = option?.key?.toString();

        if (isNumericInput) {
            // Exact numeric match
            if (Number(value) === numericInput || Number(key) === numericInput) {
                return true;
            }

            // Partial numeric match
            if (value?.includes(inputValue) || key?.includes(inputValue)) {
                return true;
            }
        }

        // Fallback: String matching for non-numeric input
        if (
            typeof value === "string" &&
            value.toLowerCase().includes(inputValue.toLowerCase())
        ) {
            return true;
        }

        if (
            typeof key === "string" &&
            key.toLowerCase().includes(inputValue.toLowerCase())
        ) {
            return true;
        }

        return false;
    });
}, [inputValue, options, selectedValue, mode]);