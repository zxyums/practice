import jwtDecode from "jwt-decode";

export const getTokenExpirationTime = (token: string): number | null => {
  try {
    const decodedToken: any = jwtDecode(token);
    return decodedToken.exp * 1000; // Convert expiration to milliseconds
  } catch (error) {
    console.error("Failed to decode token:", error);
    return null;
  }
};

export const shouldRenewToken = (token: string): boolean => {
  const expirationTime = getTokenExpirationTime(token);
  if (!expirationTime) {
    // If expirationTime is null, it means the token is invalid or decoding failed.
    console.warn("Token expiration time not available. Cannot determine renewal.");
    return false;
  }

  const currentTime = Date.now();
  const bufferTime = 60000; // Renew 1 minute before expiration

  return expirationTime - currentTime <= bufferTime; // Return true if it's time to renew
};